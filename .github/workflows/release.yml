name: Release

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
    
    - name: Install dependencies
      run: bun install
    
    - name: Compile TypeScript
      run: bunx tsc -p ./
    
    - name: Run ultracite lint check
      run: bunx ultracite lint
    
    - name: Run markdownlint-cli2
      run: bunx markdownlint-cli2 "**/*.md" "#node_modules"
    
    # Auto-versioning (only on manual trigger)
    - name: Bump version
      if: github.event_name == 'workflow_dispatch'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        npm version ${{ github.event.inputs.version_type }} --no-git-tag-version
        NEW_VERSION=$(node -p "require('./package.json').version")
        echo "NEW_VERSION=v$NEW_VERSION" >> $GITHUB_ENV
        git add package.json
        git commit -m "chore: bump version to v$NEW_VERSION"
        git tag "v$NEW_VERSION"
        git push origin main
        git push origin "v$NEW_VERSION"
    
    # Get version for tag-triggered releases
    - name: Get version from tag
      if: github.event_name == 'push'
      run: |
        echo "NEW_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
    
    - name: Package extension
      run: bunx vsce package
    
    - name: Publish to VS Code Marketplace
      run: bunx vsce publish -p ${{ secrets.VSCE_PAT }}
    
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.NEW_VERSION }}
        release_name: Release ${{ env.NEW_VERSION }}
        draft: false
        prerelease: false
    
    - name: Upload VSIX to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./*.vsix
        asset_name: markdown-guillemets-${{ env.NEW_VERSION }}.vsix
        asset_content_type: application/zip